@page "/Rates/DPSCalc"
@inject GameState GameState
@implements IDisposable

<h3>DPS Calculator</h3>

<div>
    <button @onclick="@(() => CalculateDPS())">Calculate</button>
    <div>
        Average Ticks Per Kill:@Calculator.AverageKillTime
    </div>
    <div>
        Total Ticks Taken:@Calculator.TotalTicksTaken
    </div>
</div>

<div>
    <Quepland_2.Components.CustomDropdownComponent @bind-Value="@SelectedMonsterName" DropdownItems="@BattleManager.Instance.Monsters.Select(x=> x.Name).ToList()"></Quepland_2.Components.CustomDropdownComponent>
</div>
<div>
    @SelectedMonsterName
    <button @onclick="@(() => AddOpponent(SelectedMonsterName))">Add</button>
</div>
<div>
    Opponents:
    @foreach (Monster opponent in Calculator.Opponents)
    {
        <div>
            @opponent.Name
        </div>
    }
</div>
<div style="position:absolute;right:0px;display:flex;width:400px;">
    <div style="position:relative;width:400px;height:200px">
        <div>
            Strength:<input @bind-value="@Player.Instance.Skills.Find(x=>x.Name=="Strength").Level"/>
        </div>
        <div>
            Knife:<input @bind-value="@Player.Instance.Skills.Find(x=>x.Name=="Knifesmanship").Level" />
        </div>        
        <div>
            Sword:<input @bind-value="@Player.Instance.Skills.Find(x=>x.Name=="Swordsmanship").Level" />
        </div>        
        <div>
            Axe:<input @bind-value="@Player.Instance.Skills.Find(x=>x.Name=="Axemanship").Level" />
        </div>        
        <div>
            Hammer:<input @bind-value="@Player.Instance.Skills.Find(x=>x.Name=="Hammermanship").Level" />
        </div>
        <div>
            Deftness:<input @bind-value="@Player.Instance.Skills.Find(x=>x.Name=="Deftness").Level" />
        </div>
    </div>
    @foreach(GameItem item in ItemManager.Instance.Items)
    {
        @if(item.ArmorInfo != null || item.WeaponInfo != null)
        {
        <div @onclick="@(() => Player.Instance.Equip(item))">
        <Quepland_2.Components.ItemBoxComponent Item="@item"></Quepland_2.Components.ItemBoxComponent>

        </div>
        }
    }
</div>

@code {

    public string SelectedMonsterName = "Select a Monster";
    public DPSCalc Calculator = new DPSCalc();

    public void CalculateDPS()
    {
        Calculator.CalculateDPS();
        GameState.UpdateState();
    }
    public void ClearOpponents()
    {
        Calculator.Opponents.Clear();
        GameState.UpdateState();
    }
    public void AddOpponent(string monsterName)
    {
        Monster m = BattleManager.Instance.GetMonsterByName(monsterName);
        if(m != null)
        {
            Calculator.Opponents.Add(m);
        }
        GameState.UpdateState();
    }
    public void SetPlayerStat(string stat, int level)
    {
        Player.Instance.Skills.Find(x => x.Name == stat).SetSkillLevel(level);
        GameState.UpdateState();
    }
    protected override void OnInitialized()
    {
        GameState.StateChanged += OnGameStateChanged;
    }
    public void Dispose()
    {
        GameState.StateChanged -= OnGameStateChanged;
    }
    void OnGameStateChanged(object sender, EventArgs e) => StateHasChanged();
}
