@page "/Settings/"
@inject GameState GameState
@inject NavigationManager UriHelper
@implements IDisposable

    <div style="display:flex;margin:10px;">
        <div>
            Set Main Window Size:
        </div>
        <button class="btn btn-primary" style="margin:10px;padding:10px;" @onclick="@(() => ResizeWindow(600))">Small (600px)</button>
        <button class="btn btn-primary" style="margin:10px;padding:10px;" @onclick="@(() => ResizeWindow(686))">Less Small (686px)</button>
        <button class="btn btn-primary" style="margin:10px;padding:10px;" @onclick="@(() => ResizeWindow(900))">Medium (900px)</button>
        <button class="btn btn-primary" style="margin:10px;padding:10px;" @onclick="@(() => ResizeWindow(1200))">Less Wide (1200px)</button>
        <button class="btn btn-primary" style="margin:10px;padding:10px;" @onclick="@(() => ResizeWindow(1260))">Wide (1260px)</button>
    </div>
    <div>
        You can export your save to keep a backup somewhere. You can load an exported save from the main menu.
        <button class="btn btn-primary" style="margin:10px;padding:10px;" @onclick="@(() => ExportSave())">Export Save</button>
        <input />
    </div>


@code {

    public void ExportSave()
    {

    }
    public void ResizeWindow(int w)
    {
        GameState.MinWindowWidth = w;
        GameState.UpdateState();
    }
    protected override void OnInitialized()
    {
        GameState.StateChanged += OnGameStateChanged;
    }
    public void Dispose()
    {
        GameState.StateChanged -= OnGameStateChanged;
    }
    void OnGameStateChanged(object sender, EventArgs e) => StateHasChanged();
}
