@inherits LayoutComponentBase
@inject GameState GameState


    <div style="width:1200px;display:flex;">
        @if (GameState.ShowStartMenu == false)
        {
            <div class="sidebar" style="width:300px!important">
                <NavMenu />
            </div>
        }
        <div class="main" style="min-width:600px!important;">
            <div class="top-row px-4" style="z-index:10">
                @if (GameState.ShowStartMenu == false)
                {
                    <Quepland_2.Components.ExperienceTrackerComponent></Quepland_2.Components.ExperienceTrackerComponent>
                }
            </div>

            <div>
                @Body
            </div>
            <div style="position:fixed;width:570px;overflow-y:scroll;max-height:200px;bottom:0px;"><Quepland_2.Components.MessagesMenuComponent></Quepland_2.Components.MessagesMenuComponent></div>
        </div>

        @if (GameState.ShowStartMenu == false)
        {
            <div style="width: 300px!important;background-color:darkgray;">
                <Quepland_2.Components.RightSidebarComponent></Quepland_2.Components.RightSidebarComponent>
            </div>
        }
        @if (TooltipManager.Show)
        {
            <Quepland_2.Components.TooltipComponent Tip="@TooltipManager.CurrentTip" xPos="@TooltipManager.xPos" yPos="@TooltipManager.yPos"></Quepland_2.Components.TooltipComponent>
        }
    </div>

@code{
    protected override void OnInitialized()
    {
        GameState.StateChanged += OnGameStateChanged;
    }
    public void Dispose()
    {
        GameState.StateChanged -= OnGameStateChanged;
    }
    void OnGameStateChanged(object sender, EventArgs e) => StateHasChanged();

}