@inject GameState GameState
@implements IDisposable

    <div style="width:250px;height:50px;line-height:16px;text-align:right;position:relative;">
        @if (SetSkill == "Most Recent")
        {
            @if (Player.Instance.LastGainedExp != null)
            {
                <div>
                    @Player.Instance.LastGainedExp.Name
                </div>
                <div>
                    @Player.Instance.LastGainedExp.Experience
                </div>
                <div class="progress">
                    <div class="progress-bar" style="width:@(Player.Instance.LastGainedExp.Progress)%">

                    </div>
                </div>
                <div @onclick="@(() => ToggleSettings())" style="position:absolute;top:0;right:-25px;">
                    <img style="height:20px;width:20px;cursor:pointer;opacity:0.8" src="data/Images/Settings.png" />
                </div>
            }
        }
        else
        {
            <div>
                @Player.Instance.Skills.Find(x => x.Name == SetSkill).Name
            </div>
            <div>
                @Player.Instance.Skills.Find(x => x.Name == SetSkill).Experience
            </div>
            <div class="progress">
                <div class="progress-bar" style="width:@(Player.Instance.Skills.Find(x => x.Name == SetSkill).Progress)%">

                </div>
            </div>
            <div @onclick="@(() => ToggleSettings())" style="position:absolute;top:0;right:-25px;">
                <img style="height:20px;width:20px;cursor:pointer;opacity:0.8" src="data/Images/Settings.png" />
            </div>
        }

    </div>
@if (ShowSettings)
{
    <div style="position:absolute;top:55px;right:0px;width:100%;height:300px;z-index:50;background-color:antiquewhite;">
        <CustomDropdownComponent DropdownItems="@skills" @bind-Value="@SetSkill" BoxText="@SetSkill"></CustomDropdownComponent>
    </div>
}

@code {

    private bool ShowSettings = false;
    private List<string> skills = new List<string>();
    private string SetSkill = "Most Recent";
    public void ToggleSettings()
    {
        ShowSettings = !ShowSettings;
        GameState.UpdateState();
    }
    protected override void OnInitialized()
    {
        skills.Add("Most Recent");
        skills.AddRange(Player.Instance.Skills.Select(x => x.Name));
        
        GameState.StateChanged += OnGameStateChanged;
    }
    public void Dispose()
    {
        GameState.StateChanged -= OnGameStateChanged;
    }
    void OnGameStateChanged(object sender, EventArgs e) => StateHasChanged();
}
